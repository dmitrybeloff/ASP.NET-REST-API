// <auto-generated />
using System;
using API.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API.Migrations
{
    [DbContext(typeof(ApplicationDatabaseContext))]
    [Migration("20201023192419_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9");

            modelBuilder.Entity("API.Domains.Aggregates.AuthorAggregate.Author", b =>
                {
                    b.Property<int?>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("API.Domains.Aggregates.BookAggregate.Book", b =>
                {
                    b.Property<int?>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("BookId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("API.Domains.Aggregates.BookAggregate.BookReview", b =>
                {
                    b.Property<int?>("BookReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BookId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReviewText")
                        .HasColumnType("TEXT");

                    b.Property<int>("Stars")
                        .HasColumnType("INTEGER");

                    b.HasKey("BookReviewId");

                    b.HasIndex("BookId");

                    b.ToTable("BookReviews");
                });

            modelBuilder.Entity("API.Domains.Aggregates.BookAuthorCatalogAggregate.BookAuthorCatalog", b =>
                {
                    b.Property<int?>("BookAuthorCatalogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AuthorId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BookId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BookAuthorCatalogId");

                    b.HasIndex("AuthorId");

                    b.HasIndex("BookId");

                    b.ToTable("BookAuthorCatalog");
                });

            modelBuilder.Entity("API.Domains.Aggregates.BookAggregate.BookReview", b =>
                {
                    b.HasOne("API.Domains.Aggregates.BookAggregate.Book", "Book")
                        .WithMany("BookReviews")
                        .HasForeignKey("BookId");
                });

            modelBuilder.Entity("API.Domains.Aggregates.BookAuthorCatalogAggregate.BookAuthorCatalog", b =>
                {
                    b.HasOne("API.Domains.Aggregates.AuthorAggregate.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId");

                    b.HasOne("API.Domains.Aggregates.BookAggregate.Book", "Book")
                        .WithMany("Authors")
                        .HasForeignKey("BookId");
                });
#pragma warning restore 612, 618
        }
    }
}
